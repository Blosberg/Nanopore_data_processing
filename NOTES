# First a minimap minimizer had to be created from the fasta reference for later alignment:
$../minimap2/minimap2 -d hg19_canon.mmi  /scratch/AG_Akalin/Base/Genomes/hg19_canon/hg19_canon.fa




# alignment was then done with:
$../minimap2/minimap2 -ax splice ./hg19_canon.mmi ../data/barcode05_trimmed.fastq.gz > barcode05_trimmed_aligned_mm2.sam   


# minimap keeps the non-aligned strands as zeros, however, so we have to filter out the zeros:
cat barcode05_trimmed.sam | perl -lane 'print if $F[1] ne 4'  >  barcode05_trimmed.0filter.sam


#========

With the current data set, the alignment output from minimap produces _more_ unique read_id entries than there are input reads --which is (probably) nonsense.

Their entries look like this:
 [1] SA:Z:chr7,128210465,-,261S269M29D640S,1,54;                                         
 [2] SA:Z:chr1,145969268,+,109S166M1D791S,0,24;                                          
 [3] SA:Z:chr1,149813788,+,97S532M3D325S,0,65;                                           
 [4] SA:Z:chr17,19091337,+,627S205M4D115S,7,29;                                          
 [5] SA:Z:chr11,62609096,+,77S169M9D578S,4,23;                                           
 [6] SA:Z:chr17,62487635,-,1167S388M15D69S,1,105;                                        
 [7] SA:Z:chr17,19091346,+,989S191M9D132S,1,22;   


Need to figure out what the hell is going on there before we use this pipeline anywhere.


